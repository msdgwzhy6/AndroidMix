@startuml

== 创建时 ==

Widget -> AnimationController:AnimationController()
AnimationController -> TickerProvider: vsync.createTicker(_tick)
TickerProvider -> Ticker: Ticker(onTick)

== 启动回调绑定 ==

Widget -> AnimationController:forward()
AnimationController -> AnimationController:forward()
AnimationController -> AnimationController:_animateToInternal(upperBound)
AnimationController -> Ticker:_startSimulation()

Ticker -> Ticker: start()
Ticker -> Ticker: scheduleTick()
Ticker -> SchedulerBinding:scheduleFrameCallback(_tick)
SchedulerBinding -> SchedulerBinding:scheduleFrame()
SchedulerBinding -> SchedulerBinding:ensureFrameCallbacksRegistered()
== frame callback ==
loop
Windows -> SchedulerBinding:_handleBeginFrame(Duration rawTimeStamp)
SchedulerBinding -> SchedulerBinding:_invokeFrameCallback(callbackEntry.callback);
SchedulerBinding -> AnimationController:callback(timeStamp);
AnimationController -> AnimationController: _tick(Duration elapsed);
AnimationController -> Widget:notifyListeners()
Widget-> Widget: setState()
end
@enduml